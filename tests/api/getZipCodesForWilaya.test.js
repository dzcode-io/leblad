describe('Get Zip-Codes for wilaya', () => {
  const mockData = [
    {
      mattricule: 1,
      name: 'Adrar',
      postalCodes: [
        1000,
        1001,
        1002,
        1003,
        1004,
        1005,
        1006,
        1007,
        1008,
        1009,
        1010,
        1011,
        1012,
        1013,
        1014,
        1015,
        1016,
        1017,
        1018,
        1019,
        1020,
        1021,
        1022,
        1023,
        1024,
        1025,
        1026,
        1027,
        1028,
        1029,
        1030,
        1031,
        1032,
        1033,
        1034,
        1035,
        1036,
        1037,
        1038,
        1039,
        1040,
        1041,
        1042,
        1043,
        1044,
        1045,
        1046,
        1047,
        1048,
        1049,
        1050,
        1051,
        1052,
        1053,
        1054,
        1055,
        1056,
        1057,
        1058,
        1059,
        1060,
        1061,
        1062,
        1063,
        1064,
        1065,
        1066,
        1067,
        1068,
        1069,
        1070,
        1071,
        1072,
        1073,
        1074,
      ],
    },
    {
      mattricule: 12,
      name: 'Tbessa',
      postalCodes: [
        12000,
        12001,
        12002,
        12003,
        12004,
        12005,
        12006,
        12007,
        12008,
        12009,
        12010,
        12011,
        12012,
        12013,
        12014,
        12015,
        12016,
        12017,
        12018,
        12019,
        12020,
        12021,
        12022,
        12023,
        12024,
        12025,
        12026,
        12027,
        12028,
        12029,
        12030,
        12031,
        12032,
        12033,
        12034,
        12035,
        12036,
        12037,
        12038,
        12039,
        12040,
        12041,
        12042,
        12043,
        12044,
        12045,
        12046,
        12047,
        12048,
        12049,
        12050,
        12051,
        12052,
        12053,
        12054,
        12055,
        12056,
        12057,
        12058,
        12059,
        12060,
        12061,
        12062,
        12063,
        12064,
        12065,
        12066,
        12067,
        12068,
      ],
    },
    {
      mattricule: 34,
      name: 'Bordj Bou Arreridj',
      postalCodes: [
        34000,
        34001,
        34002,
        34003,
        34004,
        34005,
        34006,
        34007,
        34008,
        34009,
        34010,
        34011,
        34012,
        34013,
        34014,
        34015,
        34016,
        34017,
        34018,
        34019,
        34020,
        34021,
        34022,
        34023,
        34024,
        34025,
        34026,
        34027,
        34028,
        34029,
        34030,
        34031,
        34032,
        34033,
        34034,
        34035,
        34036,
        34037,
        34038,
        34039,
        34040,
        34041,
        34042,
        34043,
        34044,
        34045,
        34046,
        34047,
        34048,
        34050,
        34051,
        34052,
        34053,
        34054,
        34055,
        34056,
        34057,
        34058,
        34059,
        34060,
        34061,
        34062,
        34063,
        34064,
        34065,
        34066,
        34067,
        34068,
        34069,
        34070,
        34071,
        34072,
        34073,
        34074,
      ],
    },
  ];

  let getZipCodesForWilaya;

  beforeEach(() => {
    getZipCodesForWilaya = require('../../src/api/getZipCodesForWilaya');
  });

  it('should export a function', () => {
    expect(typeof getZipCodesForWilaya).toBe('function');
  });

  it('should return a curried function that returns data', () => {
    expect(typeof getZipCodesForWilaya(mockData)).toBe('function');
  });

  it('should return null if the wilaya with the given code is not found', () => {
    expect(getZipCodesForWilaya(mockData)(289)).toBeNull();
  });

  it('should return Zip-Codes for given wilaya code', () => {
    expect(getZipCodesForWilaya(mockData)(1)).toEqual([
      1000,
      1001,
      1002,
      1003,
      1004,
      1005,
      1006,
      1007,
      1008,
      1009,
      1010,
      1011,
      1012,
      1013,
      1014,
      1015,
      1016,
      1017,
      1018,
      1019,
      1020,
      1021,
      1022,
      1023,
      1024,
      1025,
      1026,
      1027,
      1028,
      1029,
      1030,
      1031,
      1032,
      1033,
      1034,
      1035,
      1036,
      1037,
      1038,
      1039,
      1040,
      1041,
      1042,
      1043,
      1044,
      1045,
      1046,
      1047,
      1048,
      1049,
      1050,
      1051,
      1052,
      1053,
      1054,
      1055,
      1056,
      1057,
      1058,
      1059,
      1060,
      1061,
      1062,
      1063,
      1064,
      1065,
      1066,
      1067,
      1068,
      1069,
      1070,
      1071,
      1072,
      1073,
      1074,
    ]);
    expect(getZipCodesForWilaya(mockData)(12)).toEqual([
      12000,
      12001,
      12002,
      12003,
      12004,
      12005,
      12006,
      12007,
      12008,
      12009,
      12010,
      12011,
      12012,
      12013,
      12014,
      12015,
      12016,
      12017,
      12018,
      12019,
      12020,
      12021,
      12022,
      12023,
      12024,
      12025,
      12026,
      12027,
      12028,
      12029,
      12030,
      12031,
      12032,
      12033,
      12034,
      12035,
      12036,
      12037,
      12038,
      12039,
      12040,
      12041,
      12042,
      12043,
      12044,
      12045,
      12046,
      12047,
      12048,
      12049,
      12050,
      12051,
      12052,
      12053,
      12054,
      12055,
      12056,
      12057,
      12058,
      12059,
      12060,
      12061,
      12062,
      12063,
      12064,
      12065,
      12066,
      12067,
      12068,
    ]);
    expect(getZipCodesForWilaya(mockData)(34)).toEqual([
      34000,
      34001,
      34002,
      34003,
      34004,
      34005,
      34006,
      34007,
      34008,
      34009,
      34010,
      34011,
      34012,
      34013,
      34014,
      34015,
      34016,
      34017,
      34018,
      34019,
      34020,
      34021,
      34022,
      34023,
      34024,
      34025,
      34026,
      34027,
      34028,
      34029,
      34030,
      34031,
      34032,
      34033,
      34034,
      34035,
      34036,
      34037,
      34038,
      34039,
      34040,
      34041,
      34042,
      34043,
      34044,
      34045,
      34046,
      34047,
      34048,
      34050,
      34051,
      34052,
      34053,
      34054,
      34055,
      34056,
      34057,
      34058,
      34059,
      34060,
      34061,
      34062,
      34063,
      34064,
      34065,
      34066,
      34067,
      34068,
      34069,
      34070,
      34071,
      34072,
      34073,
      34074,
    ]);
  });
});
